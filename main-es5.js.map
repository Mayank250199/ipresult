{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/college-wise-graph/college-graph/college-graph.component.ts","webpack:///src/app/college-wise-graph/college-graph/college-graph.component.html","webpack:///src/app/college-wise-graph/college-wise-graph.component.ts","webpack:///src/app/college-wise-graph/college-wise-graph.component.html","webpack:///src/app/college-wise/college-wise-rank/college-wise-rank.component.ts","webpack:///src/app/college-wise/college-wise-rank/college-wise-rank.component.html","webpack:///src/app/college-wise/college-wise.component.ts","webpack:///src/app/college-wise/college-wise.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/services/college.service.ts","webpack:///src/app/services/collegegraphdata.service.ts","webpack:///src/app/services/config.service.ts","webpack:///src/app/services/student.service.ts","webpack:///src/app/services/university.service.ts","webpack:///src/app/student-result/college-rank/college-rank.component.ts","webpack:///src/app/student-result/college-rank/college-rank.component.html","webpack:///src/app/student-result/over-all-result/over-all-result.component.ts","webpack:///src/app/student-result/over-all-result/over-all-result.component.html","webpack:///src/app/student-result/semesterwise-result/semesterwise-result.component.ts","webpack:///src/app/student-result/semesterwise-result/semesterwise-result.component.html","webpack:///src/app/student-result/student-backlogs/student-backlogs.component.ts","webpack:///src/app/student-result/student-backlogs/student-backlogs.component.html","webpack:///src/app/student-result/student-result.component.ts","webpack:///src/app/student-result/student-result.component.html","webpack:///src/app/student-result/university-rank/university-rank.component.ts","webpack:///src/app/student-result/university-rank/university-rank.component.html","webpack:///src/app/university-wise/university-wise-rank/university-wise-rank.component.ts","webpack:///src/app/university-wise/university-wise-rank/university-wise-rank.component.html","webpack:///src/app/university-wise/university-wise.component.ts","webpack:///src/app/university-wise/university-wise.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","appRoutes","path","component","children","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CollegeGraphComponent","GraphSerivce","data","margin","top","right","bottom","left","console","log","encapsulation","None","CollegeWiseGraphComponent","collegeService","router","loader","textContent","collgeDetails","programmeDetails","collegeGraphFormGroup","getCollegeDetails","getProgrammeDeatils","subscribe","clgDetails","getProgrammmeDetails","progDetails","collegeGraphForm","required","controls","setValue","onlySelf","value","getCollegeAvgMarks","CollegeAverageMarks","getData","i","length","push","SubjectCode","SubjectName","InternalMarks","ExternalMarks","navigate","CollegeWiseRankComponent","students","collegeStudentsRankInfo","semNo","studentSem","CollegeWiseComponent","collegeWiseFormGroup","collegeWiseForm","getCollegeRanks","semester","FooterComponent","HeaderComponent","fire","width","html","showClass","popup","hideClass","disclaimer","HomeComponent","studentService","searchForm","getStudentResult","result","studentResult","noOfBacklogs","Backlogs","err","OnSearch","CollegeService","http","configService","collegeData","post","get","CollegeGraphDataService","start","end","Math","ceil","random","collegedata","providedIn","ConfigService","StudentService","overAllResult","sendDataToSemWiseResult","enrollment","semesterWiseResult","studentData","next","subjects","DOCS","batch","institutecode","programmecode","universityStudentRankInfo","UniversityService","universityData","CollegeRankComponent","studentEnrollmentNo","enrollmentnumber","OverAllResultComponent","totalMarks","marksOutOf","marksPercentage","sem","marksoutOf","SemesterwiseResultComponent","particularSemSubjects","universityRankLoader","creditScored","getSemesterResultData","calculatePercntAndCredit","getStudentCollegeRank","getUniversityRank","total","parseInt","subject","subjectexternalm","subjectwholem","credit","universityRank","collegeRank","StudentBacklogsComponent","backlogs","StudentResultComponent","route","overallResult","IntialData","lastSemResultNo","SEMDATA","a1","sendToSemWise","semdata","UniversityRankComponent","getStudents","UniversityWiseRankComponent","universityService","UniversityWiseComponent","universityWiseForm","getUniversityRanks","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\"\r\nimport { StudentResultComponent } from './student-result/student-result.component';\r\nimport { SemesterwiseResultComponent } from './student-result/semesterwise-result/semesterwise-result.component';\r\nimport { OverAllResultComponent } from './student-result/over-all-result/over-all-result.component';\r\nimport { CollegeWiseComponent } from './college-wise/college-wise.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { UniversityWiseComponent } from './university-wise/university-wise.component';\r\nimport { CollegeRankComponent } from './student-result/college-rank/college-rank.component';\r\nimport { UniversityRankComponent } from './student-result/university-rank/university-rank.component';\r\nimport { CollegeWiseRankComponent } from './college-wise/college-wise-rank/college-wise-rank.component';\r\nimport { UniversityWiseRankComponent } from './university-wise/university-wise-rank/university-wise-rank.component';\r\nimport { CollegeWiseGraphComponent } from './college-wise-graph/college-wise-graph.component';\r\nimport { CollegeGraphComponent } from './college-wise-graph/college-graph/college-graph.component';\r\nimport { StudentBacklogsComponent } from './student-result/student-backlogs/student-backlogs.component';\r\n\r\nconst appRoutes: Routes = [\r\n    {\r\n        path: '', component: HomeComponent, children: [\r\n            {\r\n                path: 'studentResult', component: StudentResultComponent, children: [\r\n                    { path: '', component: SemesterwiseResultComponent },\r\n                    { path: 'overall', component: OverAllResultComponent },\r\n                    { path: 'collegeRank', component: CollegeRankComponent },\r\n                    { path: 'universityRank', component: UniversityRankComponent },\r\n                    { path: 'backlogs', component: StudentBacklogsComponent }\r\n                ],\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        path: 'collegeWise', component: CollegeWiseComponent, children: [\r\n            { path: 'collegeWiseRank', component: CollegeWiseRankComponent }\r\n        ]\r\n    },\r\n    {\r\n        path: 'universityWise', component: UniversityWiseComponent, children: [\r\n            { path: 'universityWiseRank', component: UniversityWiseRankComponent }\r\n        ]\r\n    },\r\n    {\r\n        path: 'collegeWiseGraph', component: CollegeWiseGraphComponent, children: [\r\n            { path: 'collegeGraph', component: CollegeGraphComponent }\r\n        ]\r\n    },\r\n];\r\n\r\n@NgModule({\r\n    exports: [\r\n        RouterModule\r\n    ],\r\n    imports: [\r\n        RouterModule.forRoot(appRoutes)\r\n    ]\r\n})\r\nexport class AppRoutingModule {\r\n\r\n}","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Frontend';\r\n}\r\n","<app-header></app-header>\r\n\r\n<div class=\"container\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n\r\n<app-footer></app-footer>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nimport { StudentResultComponent } from './student-result/student-result.component';\r\nimport { SemesterwiseResultComponent } from './student-result/semesterwise-result/semesterwise-result.component';\r\nimport { OverAllResultComponent } from './student-result/over-all-result/over-all-result.component';\r\nimport { CollegeWiseComponent } from './college-wise/college-wise.component';\r\nimport { UniversityWiseComponent } from './university-wise/university-wise.component';\r\nimport { CollegeRankComponent } from './student-result/college-rank/college-rank.component';\r\nimport { UniversityRankComponent } from './student-result/university-rank/university-rank.component';\r\n\r\nimport { CollegeWiseRankComponent } from './college-wise/college-wise-rank/college-wise-rank.component';\r\nimport { UniversityWiseRankComponent } from './university-wise/university-wise-rank/university-wise-rank.component';\r\n\r\n//CollegeGraph\r\nimport { CollegeWiseGraphComponent } from './college-wise-graph/college-wise-graph.component';\r\nimport { CollegeGraphComponent } from './college-wise-graph/college-graph/college-graph.component';\r\n\r\n//     ************Services**************\r\nimport { CollegeService } from './services/college.service';\r\nimport { UniversityService } from './services/university.service';\r\nimport { StudentService } from './services/student.service';\r\nimport { ConfigService } from './services/config.service';\r\nimport { CollegeGraphDataService } from './services/collegegraphdata.service';\r\nimport { StudentBacklogsComponent } from './student-result/student-backlogs/student-backlogs.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    HomeComponent,\r\n    StudentResultComponent,\r\n    SemesterwiseResultComponent,\r\n    OverAllResultComponent,\r\n    CollegeRankComponent,\r\n    UniversityRankComponent,\r\n    CollegeWiseComponent,\r\n    UniversityWiseComponent,\r\n    CollegeWiseRankComponent,\r\n    UniversityWiseRankComponent,\r\n    CollegeWiseGraphComponent,\r\n    CollegeGraphComponent,\r\n    StudentBacklogsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [\r\n    StudentService,\r\n    ConfigService,\r\n    CollegeService,\r\n    UniversityService,\r\n    CollegeGraphDataService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, ElementRef, Input, OnChanges, ViewChild, ViewEncapsulation, OnInit, AfterViewInit} from '@angular/core';\nimport * as d3 from 'd3';\nimport { CollegeGraphDataService, CollegeAvg } from '../../services/collegegraphdata.service';\n\n@Component({\n  selector: 'app-college-graph',\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: './college-graph.component.html',\n  styleUrls: ['./college-graph.component.css'],\n})\nexport class CollegeGraphComponent implements OnInit {\n  @ViewChild('barChart')\n  private chartContainer: ElementRef;\n\n  @Input()\n  data = [];\n\n  margin = { top: 20, right: 20, bottom: 30, left: 40 };\n\n  constructor(private GraphSerivce: CollegeGraphDataService) { }\n\n  ngOnInit() {\n   this.data= this.GraphSerivce.data;\n   console.log(this.data)\n   }\n\n  //  ngAfterViewInit(): void {\n  //   if (!this.data) { console.log(\"hello\"); return; }\n\n  //   this.createChart();\n  // }\n\n  // private createChart(): void {\n  //   console.log(\"he\")\n  //   d3.select('svg').remove();\n\n  //   const element = this.chartContainer.nativeElement;\n  //   const data = this.data;\n\n  //   const svg = d3.select(element).append('svg')\n  //     .attr('width', element.offsetWidth)\n  //     .attr('height', element.offsetHeight);\n\n  //   const contentWidth = element.offsetWidth - this.margin.left - this.margin.right;\n  //   const contentHeight = element.offsetHeight - this.margin.top - this.margin.bottom;\n\n  //   const x = d3\n  //     .scaleBand()\n  //     .rangeRound([0, contentWidth])\n  //     .padding(0.1)\n  //     .domain(data.map(d => d.SubjectName));\n\n  //   const y = d3\n  //     .scaleLinear()\n  //     .rangeRound([contentHeight, 0])\n  //     .domain([0, d3.max(data, d => d.InternalMarks)]);\n\n  //   const g = svg.append('g')\n  //     .attr('transform', 'translate(' + this.margin.left + ',' + this.margin.top + ')');\n\n  //   g.append('g')\n  //     .attr('class', 'axis axis--x')\n  //     .attr('transform', 'translate(0,' + contentHeight + ')')\n  //     .call(d3.axisBottom(x));\n\n  //   g.append('g')\n  //     .attr('class', 'axis axis--y')\n  //     .call(d3.axisLeft(y))\n  //     .append('text')\n  //     .attr('transform', 'rotate(-90)')\n  //     .attr('y', 6)\n  //     .attr('dy', '0.71em')\n  //     .attr('text-anchor', 'end')\n  //     .text('InternalMarks');\n\n  //   g.selectAll('.bar')\n  //     .data(data)\n  //     .enter().append('rect')\n  //     .attr('class', 'bar')\n  //     .attr('x', d => x(d.SubjectName))\n  //     .attr('y', d => y(d.InternalMarks))\n  //     .attr('width', x.bandwidth())\n  //     .attr('height', d => contentHeight - y(d.InternalMarks));\n  // }\n\n  // onResize() {\n  //   this.createChart();\n  // }\n}\n","\n<!-- <div #barChart id=\"bar-chart\"></div>\n<br>\n<br> -->\n\n<div class=\"table-responsive\">\n        <table class=\"table\" *ngIf=\"data.length > 0\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">Subject Code</th>\n                    <th scope=\"col\">Subject Name</th>\n                    <th scope=\"col\">Internal Avg Marks</th>\n                    <th scope=\"col\">External Avg Marks</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let d of data\">\n                    <th scope=\"row\">{{d.SubjectCode}}</th>\n                    <td >{{d.SubjectName}}</td>\n                    <td>{{d.InternalMarks | number : '1.2-2'}}</td>\n                    <td>{{d.ExternalMarks | number : '1.2-2'}}</td>\n                </tr>\n            </tbody>\n</table>","import { Component, OnInit } from '@angular/core';\nimport { CollegeGraphDataService } from '../services/collegegraphdata.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { CollegeService } from '../services/college.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-college-wise-graph',\n  templateUrl: './college-wise-graph.component.html',\n  styleUrls: ['./college-wise-graph.component.css']\n})\nexport class CollegeWiseGraphComponent implements OnInit {\n\n  loader=false;\n  textContent = true;\n  collegeGraphForm: FormGroup;\n  collgeDetails=[];\n  programmeDetails=[];\n\n  constructor(private collegeService:CollegeService, private router:Router, private GraphSerivce: CollegeGraphDataService) {\n  }\n\n  ngOnInit(): void {\n    this.loader=true;\n    this.collegeGraphFormGroup();\n    this.getCollegeDetails();\n    this.getProgrammeDeatils();\n  }\n\n\n  getCollegeDetails(){\n    this.collegeService.getCollegeDetails().subscribe((clgDetails:any)=>{\n      this.collgeDetails=clgDetails;\n        this.loader=false;\n      console.log(this.collgeDetails);\n    })\n  }\n\n  getProgrammeDeatils(){\n    this.collegeService.getProgrammmeDetails().subscribe((progDetails:any)=>{\n      this.programmeDetails=progDetails;\n      this.loader=false;\n      console.log(this.programmeDetails);\n    });\n  }\n\n  collegeGraphFormGroup(){\n    this.collegeGraphForm = new FormGroup({\n      'batch': new FormControl(null, [Validators.required]),\n      'collegecode': new FormControl(null, [Validators.required]),\n      'branch': new FormControl(null, [Validators.required]),\n      'semester': new FormControl(null, [Validators.required]),\n    })\n    this.collegeGraphForm.controls['batch'].setValue('2016', {onlySelf: true});\n    this.collegeGraphForm.controls['collegecode'].setValue('208', {onlySelf: true});\n    this.collegeGraphForm.controls['branch'].setValue('027', {onlySelf: true});\n    this.collegeGraphForm.controls['semester'].setValue('01', {onlySelf: true});\n  }\n\n  CollegeGraphAvgSearch(){\n      console.log(this.collegeGraphForm.value);\n      this.loader=true;\n      this.GraphSerivce.getCollegeAvgMarks(this.collegeGraphForm.value).subscribe((CollegeAverageMarks) => {\n        this.GraphSerivce.getData=CollegeAverageMarks;\n        for (let i = 1; i < this.GraphSerivce.getData.length; i++) {\n          this.GraphSerivce.data.push({\n            SubjectCode: CollegeAverageMarks[i].SubjectCode,\n            SubjectName: CollegeAverageMarks[i].SubjectName,\n            InternalMarks: CollegeAverageMarks[i].InternalMarks,\n            ExternalMarks:CollegeAverageMarks[i].ExternalMarks,\n          });\n        }\n        this.loader=false;\n        this.router.navigate(['/collegeWiseGraph/collegeGraph']);\n        });  \n      }\n    \n    \n}\n","<div id=\"container\">\n        <div class=\"title\" *ngIf=\"textContent\">\n            <h1>IPU RESULT</h1>\n            GURU GOBIND SINGH INDRAPRASTHA UNIVERSITY B.TECH RESULTS FOR AFFILIATED INSTITUTES\n            <br>\n            <br>\n        </div>\n        <div id=\"searchBar\" *ngIf=\"collgeDetails.length>0 &&  programmeDetails.length>0\">\n            <form [formGroup]=\"collegeGraphForm\" (ngSubmit)=\"CollegeGraphAvgSearch()\">\n                <div class=\"row\">\n                    <div class=\"col-lg-3\">\n                        <label for=\"batch\">Batch</label>\n                        <select id=\"batch\" class=\"form-control\" formControlName=\"batch\">\n                            <option [ngValue]=\"'2016'\">2016</option>\n                            <option [ngValue]=\"'2017'\">2017</option>\n                            <option [ngValue]=\"'2018'\">2018</option>\n                            <option [ngValue]=\"'2019'\">2019</option>\n                            <option [ngValue]=\"'2020'\">2020</option>\n                        </select>\n                    </div>\n                    <div class=\"col-lg-3\">\n                        <label for=\"collegecode\">College</label>\n                        <select id=\"collegecode\" class=\"form-control\" formControlName=\"collegecode\">\n                            <option *ngFor=\"let college of collgeDetails\" [ngValue]=\"college.institutecode\">{{college.institutename}}</option>\n                        </select>\n                    </div>\n                    <div class=\"col-lg-3\">\n                        <label id=\"branch\" for=\"branch\">Branch</label>\n                        <select class=\"form-control\" formControlName=\"branch\">\n                            <option *ngFor=\"let program of programmeDetails\" [ngValue]=\"program.programmecode\">{{program.programmename}} ({{program.programmecode}})</option>\n                        </select>\n                    </div>\n                    <div class=\"col-lg-3\">\n                        <label id=\"semester\" for=\"branch\">Semester</label>\n                        <select id=\"semester\" class=\"form-control\" formControlName=\"semester\">\n                            <option [ngValue]=\"'01'\">01</option>\n                            <option [ngValue]=\"'02'\">02</option>\n                            <option [ngValue]=\"'03'\">03</option>\n                            <option [ngValue]=\"'04'\">04</option>\n                            <option [ngValue]=\"'05'\">05</option>\n                            <option [ngValue]=\"'06'\">06</option>\n                            <option [ngValue]=\"'07'\">07</option>\n                            <option [ngValue]=\"'08'\">08</option>\n                        </select>\n                    </div>\n                </div><br>\n                <button class=\"btn btn-success srchbtn\" type=\"submit\">Search</button>\n            </form>\n        </div>\n\n        <div class=\"lds-ellipsis\" *ngIf=\"loader\">\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n        \n        </div>\n        <br><br>\n\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\r\nimport { CollegeService } from 'src/app/services/college.service';\r\n\r\n@Component({\r\n  selector: 'app-college-wise-rank',\r\n  templateUrl: './college-wise-rank.component.html',\r\n  styleUrls: ['./college-wise-rank.component.css']\r\n})\r\nexport class CollegeWiseRankComponent implements OnInit {\r\n\r\n  students=[];\r\n  semNo;\r\n\r\n  constructor(private collegeService:CollegeService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.students=this.collegeService.collegeStudentsRankInfo;\r\n    this.semNo=this.collegeService.studentSem;\r\n    console.log(this.students);\r\n  }\r\n\r\n}\r\n","<h4>Sem {{semNo}}, College Rank List</h4>\r\n<div class=\"table-responsive\">\r\n<table class=\"table\" *ngIf=\"students.length>0\">\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">Rank</th>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Roll Number</th>\r\n            <th scope=\"col\">Aggregate</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let student of students\">\r\n            <th scope=\"row\">{{student.rank}}</th>\r\n            <td >{{student.name}}</td>\r\n            <td>{{student.enrollmentnumber}}</td>\r\n            <td>{{student.percentage | number : '1.2-2'}}</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { StudentService } from '../services/student.service';\r\nimport { CollegeService } from '../services/college.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-college-wise',\r\n  templateUrl: './college-wise.component.html',\r\n  styleUrls: ['./college-wise.component.css']\r\n})\r\nexport class CollegeWiseComponent implements OnInit {\r\n\r\n  loader=false;\r\n  textContent = true;\r\n  collegeWiseForm: FormGroup;\r\n  collgeDetails=[];\r\n  programmeDetails=[];\r\n\r\n  constructor(private collegeService:CollegeService, private router:Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loader=true;\r\n    this.collegeWiseFormGroup();\r\n    this.getCollegeDetails();\r\n    this.getProgrammeDeatils();\r\n  }\r\n\r\n  getCollegeDetails(){\r\n    this.collegeService.getCollegeDetails().subscribe((clgDetails:any)=>{\r\n      this.collgeDetails=clgDetails;\r\n        this.loader=false;\r\n      console.log(this.collgeDetails);\r\n    })\r\n  }\r\n  getProgrammeDeatils(){\r\n    this.collegeService.getProgrammmeDetails().subscribe((progDetails:any)=>{\r\n      this.programmeDetails=progDetails;\r\n      this.loader=false;\r\n      console.log(this.programmeDetails);\r\n    });\r\n  }\r\n  collegeWiseFormGroup() {\r\n    this.collegeWiseForm = new FormGroup({\r\n      'batch': new FormControl(null, [Validators.required]),\r\n      'collegecode': new FormControl(null, [Validators.required]),\r\n      'branch': new FormControl(null, [Validators.required]),\r\n      'semester': new FormControl(null, [Validators.required]),\r\n    })\r\n\r\n    this.collegeWiseForm.controls['batch'].setValue('2016', {onlySelf: true});\r\n    this.collegeWiseForm.controls['collegecode'].setValue('208', {onlySelf: true});\r\n    this.collegeWiseForm.controls['branch'].setValue('027', {onlySelf: true});\r\n    this.collegeWiseForm.controls['semester'].setValue('01', {onlySelf: true});\r\n  }\r\n\r\n  collegeWiseSearch() {\r\n    console.log(this.collegeWiseForm.value);\r\n    this.loader=true;\r\n    this.collegeService.getCollegeRanks(this.collegeWiseForm.value).subscribe((students) => {\r\n      this.collegeService.collegeStudentsRankInfo = students;\r\n      this.collegeService.studentSem = this.collegeWiseForm.value.semester;\r\n      this.loader=false;\r\n      this.router.navigate(['collegeWise/collegeWiseRank']);\r\n  });\r\n  }\r\n\r\n\r\n}\r\n","<div id=\"container\">\r\n    <div class=\"title\" *ngIf=\"textContent\">\r\n        <h1>IPU RESULT</h1>\r\n        GURU GOBIND SINGH INDRAPRASTHA UNIVERSITY B.TECH RESULTS FOR AFFILIATED INSTITUTES\r\n        <br>\r\n        <br>\r\n    </div>\r\n    <div id=\"searchBar\" *ngIf=\"collgeDetails.length>0 &&  programmeDetails.length>0\">\r\n        <form [formGroup]=\"collegeWiseForm\" (ngSubmit)=\"collegeWiseSearch()\">\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-3\">\r\n                    <label for=\"batch\">Batch</label>\r\n                    <select id=\"batch\" class=\"form-control\" formControlName=\"batch\">\r\n                        <option [ngValue]=\"'2016'\">2016</option>\r\n                        <option [ngValue]=\"'2017'\">2017</option>\r\n                        <option [ngValue]=\"'2018'\">2018</option>\r\n                        <option [ngValue]=\"'2019'\">2019</option>\r\n                        <option [ngValue]=\"'2020'\">2020</option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"col-lg-3\">\r\n                    <label for=\"collegecode\">College</label>\r\n                    <select id=\"collegecode\" class=\"form-control\" formControlName=\"collegecode\">\r\n                        <option *ngFor=\"let college of collgeDetails\" [ngValue]=\"college.institutecode\">{{college.institutename}}</option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"col-lg-3\">\r\n                    <label id=\"branch\" for=\"branch\">Branch</label>\r\n                    <select class=\"form-control\" formControlName=\"branch\">\r\n                        <option *ngFor=\"let program of programmeDetails\" [ngValue]=\"program.programmecode\">{{program.programmename}} ({{program.programmecode}})</option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"col-lg-3\">\r\n                    <label id=\"semester\" for=\"branch\">Semester</label>\r\n                    <select id=\"semester\" class=\"form-control\" formControlName=\"semester\">\r\n                        <option [ngValue]=\"'01'\">01</option>\r\n                        <option [ngValue]=\"'02'\">02</option>\r\n                        <option [ngValue]=\"'03'\">03</option>\r\n                        <option [ngValue]=\"'04'\">04</option>\r\n                        <option [ngValue]=\"'05'\">05</option>\r\n                        <option [ngValue]=\"'06'\">06</option>\r\n                        <option [ngValue]=\"'07'\">07</option>\r\n                        <option [ngValue]=\"'08'\">08</option>\r\n                    </select>\r\n                </div>\r\n            </div><br>\r\n            <button class=\"btn btn-success srchbtn\" type=\"submit\">Search</button>\r\n        </form>\r\n    </div>\r\n    <div class=\"lds-ellipsis\" *ngIf=\"loader\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n\r\n</div>\r\n<br><br>\r\n\r\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<footer>\r\n      <div class=\"mini-footer\">\r\n            <div class=\"container\">\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                  <p class=\"grey-text text-lighten-4\">This portal is an initiative of <a href=\"http://www.bpitindia.com\">BPIT DELHI</a> and is currently under Development &amp; Testing. <br> REPORT ANY DISCREPANCIES IN RESULTS OR GIVE FEEDBACK/SUGGESTIONS AT <a href=\"\">resultapp@bpitindia.com</a></p>\r\n                  <div class=\"copyright-text\">\r\n                    <p>© 2020\r\n                      <a href=\"#\">SRCS IPU</a>, All rights reserved. Created by\r\n                      <a href=\"#\">BPIT INDIA</a>\r\n                    </p>\r\n                  </div>\r\n        \r\n                  <div class=\"go_top\">\r\n                    <span class=\"icon-arrow-up\"></span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n</footer>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport Swal from 'sweetalert2'\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  disclaimer(){\r\n    Swal.fire({\r\n      title: 'Disclaimer',\r\n      width: 900,\r\n      html:\r\n    '<br>'+\r\n    \r\n                    \r\n'All Results have been compiled from Result files available at IPU website.Results are compiled automatically using scripts due to which some results may not have been compiled.Please confirm your results from ipu website or marksheets before using it for any purpose.',\r\n    showClass: {\r\n      popup: 'animated fadeInDown'\r\n    },\r\n    hideClass: {\r\n      popup: 'animated fadeOutUp'\r\n    }\r\n   \r\n    })\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-md  sticky-top bg-white navbar-light\">\r\n        <a class=\"navbar-brand mr-auto\" [routerLink]=\"['/']\"><img src=\"https://img.icons8.com/plasticine/100/000000/mixer-logo.png\" width=\"50px\"/>SRCS IPU</a>\r\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div class=\"collapse navbar-collapse navbar-default\" id=\"collapsibleNavbar\">\r\n          <ul class=\"navbar-nav ml-auto\">\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" href=\"/\">Home</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" [routerLink]=\"['/collegeWise']\">College Rank</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" [routerLink]=\"['/universityWise']\">University Rank</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link\" [routerLink]=\"['/collegeWiseGraph']\">College Avg. Marks</a>\r\n              </li>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" (click)=\"disclaimer()\">Disclaimer</a>\r\n            </li>    \r\n          </ul>\r\n        </div>  \r\n      </nav>\r\n      <br>\r\n      <br>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { StudentService } from '../services/student.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  searchForm: FormGroup;\r\n  loader = false;\r\n  textContent = true;\r\n\r\n  constructor(private studentService: StudentService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.textContent = true;\r\n    console.log(\"home\")\r\n    this.searchForm = new FormGroup({\r\n      'enrollment': new FormControl(null, [Validators.required])\r\n    })\r\n  }\r\n  \r\n  OnSearch() {\r\n    this.router.navigate(['/']);\r\n    this.loader = true;\r\n    this.studentService.getStudentResult(this.searchForm.value).subscribe((result) => {\r\n      this.textContent = false;\r\n      this.studentService.studentResult = result;\r\n      this.studentService.noOfBacklogs=result['BACKLOGS'];\r\n      this.studentService.Backlogs=result['SEMBACK'];\r\n      this.loader = false;\r\n      this.router.navigate(['studentResult']);\r\n    }, (err) => {\r\n      this.loader = false;\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div id=\"container\">\r\n    <div class=\"title\" *ngIf=\"textContent\">\r\n        <h1>Student Result Consolidation System</h1>\r\n        <h5 class=\"text2\">\r\n        GURU GOBIND SINGH INDRAPRASTHA UNIVERSITY B.TECH RESULTS FOR AFFILIATED INSTITUTES\r\n        </h5>\r\n        <img src=\"https://upload.wikimedia.org/wikipedia/en/thumb/b/b8/GGSIU_logo.svg/220px-GGSIU_logo.svg.png\" alt=\"\">\r\n        <br>\r\n    </div>\r\n    <div id=\"searchBar\">\r\n        <form [formGroup]=\"searchForm\" (ngSubmit)=\"OnSearch()\">\r\n            <input class=\"search\" type=\"text\" formControlName=\"enrollment\" placeholder=\"IPU Roll Number\"><br><br>\r\n            <button class=\"btn btn-success\" type=\"submit\">Search</button>\r\n        </form>\r\n    </div>\r\n    <div class=\"lds-ellipsis\" *ngIf=\"loader\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n    <div class=\"title\" *ngIf=\"textContent\"> \r\n        <br>\r\n           <p> CS, IT, EEE, ECE, MAE, MCA results</p>\r\n            <br>\r\n            <p class=\"text1\">Check your all semester results along with College wise and University wise ranks, total marks and backlogs.Know where\r\n                you stand in the rankings and also check out other student's results.</p>\r\n        </div>\r\n       \r\n    \r\n\r\n    <router-outlet></router-outlet>\r\n  \r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { ConfigService } from './config.service';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable()\r\n\r\nexport class CollegeService {\r\n    path: string = this.configService.path;\r\n\r\n    studentSem: string;\r\n    collegeStudentsRankInfo;\r\n\r\n    constructor(private http: HttpClient, private router: Router, private configService: ConfigService) { }\r\n\r\n    getCollegeRanks(collegeData) {\r\n        return this.http.post(this.path + '/collegewiseranks', collegeData)\r\n    }\r\n\r\n    getCollegeDetails() {\r\n        return this.http.get(this.path + '/getcollegedetails');\r\n    }\r\n\r\n    getProgrammmeDetails() {\r\n        return this.http.get(this.path + '/getprogrammedetails');\r\n    }\r\n\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { ConfigService } from './config.service';\nimport { Observable } from 'rxjs';\n\nexport interface CollegeAvg {\n  SubjectCode: string;\n  SubjectName: string;\n  InternalMarks: number;\n  ExternalMarks:number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class CollegeGraphDataService {\n\n  path: string = this.configService.path;\n  data=[];\n  getData:any;\n\n\nconstructor(private configService: ConfigService,private http: HttpClient, private router: Router) { }\n\nprivate generateRandomValue(start: number, end: number) {\n  return Math.ceil(Math.random() * (end - start) + start);\n}\n\ngetCollegeAvgMarks(collegedata){\n  return this.http.post(this.path + '/CollegeAverageMarks', collegedata)\n}\n\n}\n","\r\nexport class ConfigService {\r\n\r\n    path: string = \"https://srcs.herokuapp.com\";\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { ConfigService } from './config.service';\r\nimport { Subject, ReplaySubject } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\n\r\nexport class StudentService {\r\n\r\n    path: string = this.configService.path;\r\n\r\n    studentResult;\r\n    noOfBacklogs;\r\n    Backlogs=[];\r\n    overAllResult = [];\r\n    sendDataToSemWiseResult: ReplaySubject<any> = new ReplaySubject(1);\r\n    initialSemData;\r\n\r\n    studentSem: string;\r\n    collegeStudentsRankInfo;\r\n    universityStudentRankInfo;\r\n\r\n    constructor(private http: HttpClient, private router: Router, private configService: ConfigService) {\r\n\r\n    }\r\n\r\n    // To get student Result\r\n    getStudentResult(enrollment: object) {\r\n        return this.http.post(this.path + \"/dosearchS\", enrollment);\r\n    }\r\n\r\n    sendToSemWise(semesterWiseResult, semNo, studentData) {\r\n        this.sendDataToSemWiseResult.next({ subjects: semesterWiseResult, semNo: semNo, studentData: studentData });\r\n    }\r\n\r\n    getStudentCollegeRank() {\r\n        this.http.post(this.path + '/collegewiseranks', {\r\n            \"batch\": this.studentResult.DOCS.batch,\r\n            \"collegecode\": this.studentResult.DOCS.institutecode,\r\n            \"branch\": this.studentResult.DOCS.programmecode,\r\n            \"semester\": this.studentSem\r\n        }).subscribe((students) => {\r\n            this.collegeStudentsRankInfo = students;\r\n            this.router.navigate(['/studentResult/collegeRank']);\r\n        });\r\n    }\r\n\r\n    getUniversityRank() {\r\n        this.http.post(this.path + '/Universityranks', {\r\n            \"batch\": this.studentResult.DOCS.batch,\r\n            \"branch\": this.studentResult.DOCS.programmecode,\r\n            \"semester\": this.studentSem\r\n        }).subscribe((students) => {\r\n            this.universityStudentRankInfo = students;\r\n            this.router.navigate(['/studentResult/universityRank']);\r\n        });\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ConfigService } from './config.service';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable()\r\n\r\nexport class UniversityService {\r\n    path: string = this.configService.path;\r\n\r\n    universityStudentRankInfo;\r\n    studentSem: string;\r\n\r\n    constructor(private http: HttpClient, private router: Router, private configService: ConfigService) { }\r\n\r\n    getUniversityRanks(universityData) {\r\n        return this.http.post(this.path + '/Universityranks', universityData)\r\n    }\r\n\r\n    getProgrammmeDetails() {\r\n        return this.http.get(this.path + '/getprogrammedetails');\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { StudentService } from 'src/app/services/student.service';\r\n\r\n@Component({\r\n  selector: 'app-college-rank',\r\n  templateUrl: './college-rank.component.html',\r\n  styleUrls: ['./college-rank.component.css']\r\n})\r\nexport class CollegeRankComponent implements OnInit {\r\n\r\n  students=[];\r\n  semNo;\r\n  studentEnrollmentNo;\r\n\r\n  constructor(private studentService:StudentService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.students=this.studentService.collegeStudentsRankInfo;\r\n    this.semNo=this.studentService.studentSem;\r\n    this.studentEnrollmentNo=this.studentService.studentResult.DOCS.enrollmentnumber;\r\n\r\n    console.log(this.students);\r\n\r\n  }\r\n\r\n}\r\n","<br>\r\n<br>\r\n<h4>Sem {{semNo}}, College Rank List</h4>\r\n<div class=\"table-responsive\">\r\n<table class=\"table\" *ngIf=\"students.length>0\">\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">Rank</th>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Roll Number</th>\r\n            <th scope=\"col\">Aggregate</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let student of students\" [ngClass]=\"{rank: student.enrollmentnumber == studentEnrollmentNo}\">\r\n            <th scope=\"row\">{{student.rank}}</th>\r\n            <td >{{student.name}}</td>\r\n            <td>{{student.enrollmentnumber}}</td>\r\n            <td>{{student.percentage | number : '1.2-2'}}</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { StudentService } from '../../services/student.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-over-all-result',\r\n  templateUrl: './over-all-result.component.html',\r\n  styleUrls: ['./over-all-result.component.css']\r\n})\r\nexport class OverAllResultComponent implements OnInit {\r\n\r\n  overAllResult=[];\r\n  totalMarks:number=0;\r\n  marksOutOf:number=0;\r\n  marksPercentage:number=0;\r\n  noOfBacklogs;\r\n\r\n  constructor(private studentService:StudentService,private router:Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.totalMarks=0;\r\n    this.marksOutOf=0;\r\n    this.marksPercentage=0;\r\n\r\n    this.overAllResult=this.studentService.overAllResult;\r\n    this.noOfBacklogs=this.studentService.noOfBacklogs;\r\n\r\n    for(let sem of this.overAllResult){\r\n        this.totalMarks+=sem.totalMarks;\r\n        this.marksOutOf+=sem.marksoutOf;\r\n    }\r\n\r\n    this.marksPercentage=(this.totalMarks/this.marksOutOf)*100;\r\n  }\r\n\r\n}\r\n","<br>\r\n<br>\r\n<h4>Summary</h4>\r\n<div class=\"table-responsive\">\r\n<table class=\"table\" *ngIf=\"overAllResult.length>0\">\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">Sem</th>\r\n            <th scope=\"col\">Marks</th>\r\n            <th scope=\"col\">Percentage</th>\r\n            <th scope=\"col\">Credits</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let sem of overAllResult\">\r\n            <td>{{sem.sem}}</td>\r\n            <td>{{sem.totalMarks}} / {{sem.marksoutOf}}</td>\r\n            <td>{{sem.marksPercentage | number : '1.2-2'}}</td>\r\n            <td>{{sem.creditScored}}</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n</div>\r\n\r\n<h4>Aggregate: {{marksPercentage | number : '1.2-2'}} ({{totalMarks}}/{{marksOutOf}})</h4><br><br>\r\n<h4>Backlogs: {{noOfBacklogs}}</h4>\r\n<br><br>","import { Component, OnInit } from '@angular/core';\r\nimport { StudentService } from '../../services/student.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-semesterwise-result',\r\n  templateUrl: './semesterwise-result.component.html',\r\n  styleUrls: ['./semesterwise-result.component.css']\r\n})\r\nexport class SemesterwiseResultComponent implements OnInit {\r\n\r\n  particularSemSubjects = [];\r\n  semNo;\r\n  loader = false;\r\n  universityRankLoader = false;\r\n  totalMarks: number = 0;\r\n  marksOutOf: number = 0;\r\n  marksPercentage: number = 0;\r\n  studentData: any;\r\n  creditScored: number = 0;\r\n\r\n  constructor(private studentService: StudentService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getSemesterResultData();\r\n  }\r\n\r\n  getSemesterResultData() {\r\n\r\n    this.studentService.sendDataToSemWiseResult.subscribe((result) => {\r\n      this.particularSemSubjects = result.subjects;\r\n      this.semNo = result.semNo;\r\n      this.studentData = result.studentData\r\n      this.calculatePercntAndCredit();\r\n      console.log(\"I am called\", result);\r\n    });\r\n    console.log(this.semNo);\r\n  }\r\n\r\n  collegeRank() {\r\n    this.loader = true;\r\n    this.studentService.studentSem = this.semNo;\r\n    this.studentService.getStudentCollegeRank();\r\n  }\r\n  \r\n  universityRank() {\r\n    this.universityRankLoader = true;\r\n    this.studentService.studentSem = this.semNo;\r\n    this.studentService.getUniversityRank();\r\n  }\r\n\r\n  checkBack(totalMarks){\r\n    let total=parseInt(totalMarks);\r\n    if(total<40)\r\n    return true;\r\n    return false;\r\n  }\r\n\r\n  calculatePercntAndCredit() {\r\n    this.totalMarks = 0;\r\n    this.marksOutOf = 0;\r\n    this.marksPercentage = 0;\r\n    this.creditScored = 0;\r\n\r\n    for (let subject of this.particularSemSubjects) {\r\n      this.totalMarks += parseInt(subject.subjectexternalm);\r\n      this.marksOutOf += parseInt(subject.subjectwholem);\r\n      this.creditScored += parseInt(subject.credit);\r\n      this.marksPercentage = (this.totalMarks / this.marksOutOf) * 100;\r\n    }\r\n  }\r\n\r\n\r\n\r\n}\r\n","\r\n    <br><br>\r\n    <h4 id=\"SemNo\">Sem {{semNo}}</h4>\r\n    <br>\r\n\r\n<div class=\"table-responsive\">\r\n    <table class=\"table\">\r\n        <thead >\r\n            <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Subject</th>\r\n                <th scope=\"col\">Internal</th>\r\n                <th scope=\"col\">External</th>\r\n                <th scope=\"col\">Total</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor=\"let subject of particularSemSubjects; let i=index;\" [ngClass]=\"{back:checkBack(subject.subjectexternalm)}\" >\r\n                <th scope=\"row\">{{i+1}}</th>\r\n                <td>{{subject.subjectname}}</td>\r\n                <td>{{subject.subjectinternalM}}</td>\r\n                <td>{{subject.subjectexternalM}}</td>\r\n                <td>{{subject.subjectexternalm}}</td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>   \r\n\r\n    <br>\r\n    <div>\r\n        <h4>Aggregate: {{ marksPercentage | number : '1.2-2'}} ({{ totalMarks}} / {{ marksOutOf}})</h4><br>\r\n        <h4>Credits: {{ creditScored}}</h4>\r\n        <hr>\r\n    </div>\r\n    <br>\r\n    <button class=\"btn btn-success\" (click)=\"universityRank()\"> <i *ngIf=\"universityRankLoader\" class=\"fa fa-refresh fa-spin\"></i>University Ranks</button>\r\n    <button class=\"btn btn-success\" (click)=\"collegeRank()\"> <i *ngIf=\"loader\" class=\"fa fa-refresh fa-spin\"></i>College Ranks</button>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { StudentService } from 'src/app/services/student.service';\r\n\r\n@Component({\r\n  selector: 'app-student-backlogs',\r\n  templateUrl: './student-backlogs.component.html',\r\n  styleUrls: ['./student-backlogs.component.css']\r\n})\r\nexport class StudentBacklogsComponent implements OnInit {\r\n\r\n  backlogs=[];\r\n  constructor(private studentService:StudentService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.backlogs=this.studentService.Backlogs;\r\n  }\r\n\r\n}\r\n","<br>\r\n<br>\r\n<h4>Backlog Summary</h4>\r\n<div class=\"table-responsive\">\r\n<table class=\"table\" *ngIf=\"backlogs.length>0\">\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Subject Code</th>\r\n            <th scope=\"col\">Subject</th>\r\n            <th scope=\"col\">Exam Type</th>\r\n            <th scope=\"col\">Internal</th>\r\n            <th scope=\"col\">External</th>\r\n            <th scope=\"col\">Total</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let subject of backlogs; let i=index;\">\r\n            <td>{{i+1}}</td>\r\n            <td>{{subject.subjectcode}}</td>\r\n            <td>{{subject.subjectname}}</td>\r\n\r\n            <!-- Regular type-->\r\n            <td *ngIf=\"subject.datawithdate.length==1\">{{subject.datawithdate[0].examtype}}</td>\r\n            <td *ngIf=\"subject.datawithdate.length==1\">{{subject.datawithdate[0].internal}}</td>\r\n            <td *ngIf=\"subject.datawithdate.length==1\">{{subject.datawithdate[0].external}}</td>\r\n            <td *ngIf=\"subject.datawithdate.length==1\">{{subject.datawithdate[0].total}}</td>\r\n\r\n            <!-- Reappear type-->\r\n            <td *ngIf=\"subject.datawithdate.length>1\">{{subject.datawithdate[1].examtype}}</td>\r\n            <td *ngIf=\"subject.datawithdate.length>1\">{{subject.datawithdate[1].internal}}</td>\r\n            <td *ngIf=\"subject.datawithdate.length>1\">{{subject.datawithdate[1].external}}</td>\r\n            <td *ngIf=\"subject.datawithdate.length>1\">{{subject.datawithdate[1].total}}</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { StudentService } from '../services/student.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-student-result',\r\n  templateUrl: './student-result.component.html',\r\n  styleUrls: ['./student-result.component.css']\r\n})\r\nexport class StudentResultComponent implements OnInit {\r\n\r\n  studentResult:any;\r\n  overallResult = [];\r\n  lastSemResultNo:any;\r\n  noOfBacklogs;\r\n\r\n  constructor(private studentService: StudentService, private router: Router, private route:ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.IntialData();\r\n  }\r\n\r\n    \r\n  IntialData(){\r\n    this.studentResult = this.studentService.studentResult;\r\n    this.noOfBacklogs=this.studentService.noOfBacklogs;\r\n    console.log(this.studentResult);\r\n    for (this.lastSemResultNo in this.studentResult.SEMDATA); \r\n    console.log(this.studentResult.SEMDATA[`${this.lastSemResultNo}`].a1);\r\n    this.semester(this.studentResult.SEMDATA[`${this.lastSemResultNo}`], this.lastSemResultNo,this.studentResult.DOCS);\r\n  }\r\n\r\n  semester(sem, semNo,studentData) {\r\n    this.studentService.sendToSemWise(sem.a1, semNo,studentData);\r\n    this.router.navigate(['/studentResult']);\r\n    console.log(semNo);\r\n   \r\n  }\r\n\r\n  showBackLogs(){\r\n    this.router.navigate(['studentResult/backlogs']);\r\n  }\r\n\r\n  overAll() {\r\n    this.overallResult = [];\r\n    let semdata = this.studentResult.SEMDATA;\r\n\r\n    for (let sem in semdata) {\r\n      let marksoutOf = 0;\r\n      let totalMarks = 0;\r\n      let creditScored = 0;\r\n      let marksPercentage = 0;\r\n\r\n      for (let subject of semdata[sem]['a1']) {\r\n        totalMarks += parseInt(subject.subjectexternalm);\r\n        marksoutOf += parseInt(subject.subjectwholem);\r\n        creditScored += parseInt(subject.credit);\r\n        marksPercentage = (totalMarks / marksoutOf) * 100;\r\n      }\r\n      this.overallResult.push({\r\n        sem: sem,\r\n        totalMarks: totalMarks,\r\n        marksoutOf: marksoutOf,\r\n        marksPercentage: marksPercentage,\r\n        creditScored:creditScored\r\n      });\r\n    }\r\n    this.studentService.overAllResult = this.overallResult;\r\n    this.router.navigate(['/studentResult/overall']);\r\n  }\r\n\r\n\r\n \r\n\r\n}\r\n","<br>\r\n<div class=\"container\" *ngIf=\"studentResult!=null\">\r\n\r\n    <h4 id=\"name\">{{studentResult.DOCS.name}}</h4>\r\n<br>\r\n    <div class=\"dropdown\">\r\n        <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\" aria-expanded=\"false\">\r\n            Semester\r\n        </button>\r\n        <button class=\"btn btn-success overall\" (click)=\"overAll()\">Overall</button>\r\n        <button class=\"btn btn-success backlog\"  *ngIf=\"noOfBacklogs>0\" (click)=\"showBackLogs()\">Show Backlogs</button>\r\n        <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n            <a class=\"dropdown-item\" *ngFor=\"let sem of studentResult?.SEMDATA | keyvalue\"\r\n                (click)=\"semester(sem.value,sem.key,studentResult.DOCS)\">{{sem.key}}\r\n            </a>\r\n        </div>\r\n\r\n        <router-outlet></router-outlet>\r\n        <br>\r\n        <br>\r\n        <br>\r\n        <br>\r\n\r\n</div>\r\n ","import { Component, OnInit } from '@angular/core';\r\nimport { StudentService } from 'src/app/services/student.service';\r\n\r\n@Component({\r\n  selector: 'app-university-rank',\r\n  templateUrl: './university-rank.component.html',\r\n  styleUrls: ['./university-rank.component.css']\r\n})\r\nexport class UniversityRankComponent implements OnInit {\r\n\r\n  students=[];\r\n  semNo;\r\n  studentEnrollmentNo;\r\n\r\n  constructor(private studentService:StudentService) { }\r\n\r\n  getStudents(){\r\n    this.students=this.studentService.universityStudentRankInfo;\r\n    this.semNo=this.studentService.studentSem;\r\n    this.studentEnrollmentNo=this.studentService.studentResult.DOCS.enrollmentnumber;\r\n  }\r\n  \r\n  ngOnInit(): void {\r\n    this.getStudents();\r\n  }\r\n\r\n}\r\n","<br>\r\n<br>\r\n<h4>Sem {{semNo}}, University Rank List</h4>\r\n<div class=\"table-responsive\">\r\n<table class=\"table\" *ngIf=\"students.length>0\">\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">Rank</th>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Roll Number</th>\r\n            <th scope=\"col\">College</th>\r\n            <th scope=\"col\">Aggregate</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let student of students\" [ngClass]=\"{rank: student.enrollmentnumber == studentEnrollmentNo}\">\r\n            <th scope=\"row\">{{student.rank}}</th>\r\n            <td >{{student.name}}</td>\r\n            <td>{{student.enrollmentnumber}}</td>\r\n            <td>{{student.college}}</td>\r\n            <td>{{student.percentage | number : '1.2-2'}}</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UniversityService } from 'src/app/services/university.service';\r\n\r\n@Component({\r\n  selector: 'app-university-wise-rank',\r\n  templateUrl: './university-wise-rank.component.html',\r\n  styleUrls: ['./university-wise-rank.component.css']\r\n})\r\nexport class UniversityWiseRankComponent implements OnInit {\r\n\r\n  students=[];\r\n  semNo;\r\n\r\n  constructor(private universityService:UniversityService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.students=this.universityService.universityStudentRankInfo\r\n    this.semNo=this.universityService.studentSem;\r\n    console.log(this.students);\r\n  }\r\n\r\n}\r\n","<h4>Sem {{semNo}}, University Rank List</h4>\r\n<div class=\"table-responsive\">\r\n<table class=\"table\" *ngIf=\"students.length>0\">\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">Rank</th>\r\n            <th scope=\"col\">Name</th>\r\n            <th scope=\"col\">Roll Number</th>\r\n            <th scope=\"col\">Aggregate</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let student of students\">\r\n            <th scope=\"row\">{{student.rank}}</th>\r\n            <td >{{student.name}}</td>\r\n            <td>{{student.enrollmentnumber}}</td>\r\n            <td>{{student.percentage | number : '1.2-2'}}</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n</div>\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { StudentService } from '../services/student.service';\r\nimport { UniversityService } from '../services/university.service';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-university-wise',\r\n  templateUrl: './university-wise.component.html',\r\n  styleUrls: ['./university-wise.component.css']\r\n})\r\nexport class UniversityWiseComponent implements OnInit {\r\n\r\n  textContent = true;\r\n  loader = false;\r\n  programmeDetails=[];\r\n  universityWiseForm: FormGroup;\r\n\r\n  constructor(private universityService: UniversityService, private router: Router) { }\r\n\r\n  getProgrammeDeatils(){\r\n    this.universityService.getProgrammmeDetails().subscribe((progDetails:any)=>{\r\n      this.programmeDetails=progDetails;\r\n      this.loader=false;\r\n      console.log(this.programmeDetails);\r\n    });\r\n  }\r\n  ngOnInit(): void {\r\n    this.loader=true;\r\n    this.collegeWiseFormGroup();\r\n    this.getProgrammeDeatils();\r\n  }\r\n\r\n\r\n  collegeWiseFormGroup() {\r\n    this.universityWiseForm = new FormGroup({\r\n      'batch': new FormControl(null, [Validators.required]),\r\n      'collegecode': new FormControl(null, [Validators.required]),\r\n      'branch': new FormControl(null, [Validators.required]),\r\n      'semester': new FormControl(null, [Validators.required]),\r\n    })\r\n\r\n    this.universityWiseForm.controls['batch'].setValue('2016', {onlySelf: true});\r\n    this.universityWiseForm.controls['branch'].setValue('027', {onlySelf: true});\r\n    this.universityWiseForm.controls['semester'].setValue('01', {onlySelf: true});\r\n  }\r\n\r\n  collegeWiseSearch() {\r\n    this.loader = true;\r\n    this.universityService.getUniversityRanks(this.universityWiseForm.value).subscribe((students) => {\r\n      this.universityService.universityStudentRankInfo = students;\r\n      this.universityService.studentSem = this.universityWiseForm.value.semester;\r\n      this.loader = false;\r\n      this.router.navigate(['universityWise/universityWiseRank']);\r\n    });\r\n  }\r\n\r\n}\r\n","<div id=\"container\">\r\n    <div class=\"title\" *ngIf=\"textContent\">\r\n        <h1>IPU RESULT</h1>\r\n        GURU GOBIND SINGH INDRAPRASTHA UNIVERSITY B.TECH RESULTS FOR AFFILIATED INSTITUTES\r\n        <br>\r\n        <br>\r\n    </div>\r\n    <div id=\"searchBar\" *ngIf=\"programmeDetails.length>0\">\r\n        <form [formGroup]=\"universityWiseForm\" (ngSubmit)=\"collegeWiseSearch()\">\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-4\">\r\n                    <label for=\"batch\">Batch</label>\r\n                    <select id=\"batch\" class=\"form-control\" formControlName=\"batch\">\r\n                        <option [ngValue]=\"'2016'\">2016</option>\r\n                        <option [ngValue]=\"'2017'\">2017</option>\r\n                        <option [ngValue]=\"'2018'\">2018</option>\r\n                        <option [ngValue]=\"'2019'\">2019</option>\r\n                        <option [ngValue]=\"'2020'\">2020</option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"col-lg-4\">\r\n                    <label id=\"branch\" for=\"branch\">Branch</label>\r\n                    <select class=\"form-control\" formControlName=\"branch\">\r\n                        <option *ngFor=\"let program of programmeDetails\" [ngValue]=\"program.programmecode\">{{program.programmename}} ({{program.programmecode}})</option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"col-lg-4\">\r\n                    <label id=\"semester\" for=\"branch\">Semester</label>\r\n                    <select id=\"semester\" class=\"form-control\" formControlName=\"semester\">\r\n                        <option [ngValue]=\"'01'\">01</option>\r\n                        <option [ngValue]=\"'02'\">02</option>\r\n                        <option [ngValue]=\"'03'\">03</option>\r\n                        <option [ngValue]=\"'04'\">04</option>\r\n                        <option [ngValue]=\"'05'\">05</option>\r\n                        <option [ngValue]=\"'06'\">06</option>\r\n                        <option [ngValue]=\"'07'\">07</option>\r\n                        <option [ngValue]=\"'08'\">08</option>\r\n                    </select>\r\n                </div>\r\n            </div><br>\r\n            <button class=\"btn btn-success srchbtn\" type=\"submit\">Search</button>\r\n        </form>\r\n    </div>\r\n    <div class=\"lds-ellipsis\" *ngIf=\"loader\">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n</div>\r\n<br><br>\r\n\r\n<router-outlet></router-outlet>\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}